
import os
from cryptography.fernet import Fernet

# Generate and save a key
def generate_key():
    key = Fernet.generate_key()
    with open("secret.key", "wb") as key_file:
        key_file.write(key)
    print("Key generated and saved as 'secret.key'")

# Load the key
def load_key():
    return open("secret.key", "rb").read()

# List available files
def list_files():
    files = [f for f in os.listdir() if os.path.isfile(f) and not f.endswith(".enc")]
    print("Available files:")
    for idx, file in enumerate(files, start=1):
        print(f"{idx}. {file}")
    choice = int(input("Select a file number: ")) - 1
    return files[choice] if 0 <= choice < len(files) else None

# Encrypt a file
def encrypt_file(filename):
    key = load_key()
    cipher = Fernet(key)
    with open(filename, "rb") as file:
        file_data = file.read()
    encrypted_data = cipher.encrypt(file_data)
    with open(filename + ".enc", "wb") as file:
        file.write(encrypted_data)
    print(f"File '{filename}' encrypted successfully.")

# Decrypt a file
def decrypt_file(encrypted_filename, output_filename):
    key = load_key()
    cipher = Fernet(key)
    with open(encrypted_filename, "rb") as file:
        encrypted_data = file.read()
    decrypted_data = cipher.decrypt(encrypted_data)
    with open(output_filename, "wb") as file:
        file.write(decrypted_data)
    print(f"File '{encrypted_filename}' decrypted successfully as '{output_filename}'.")

# Example usage
if __name__ == "__main__":
    generate_key()
    file_to_encrypt = list_files()
    if file_to_encrypt:
        encrypt_file(file_to_encrypt)
        decrypt_file(file_to_encrypt + ".enc", "decrypted_" + file_to_encrypt)
